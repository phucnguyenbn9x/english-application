package DictionaryGUI;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Nguyễn Phúc
 */
public class DictionaryGUI extends javax.swing.JFrame {

    // Icon true
    ImageIcon iconTrue = new ImageIcon("IconTrue.png");
    // Biến sinh ngẫu nhiên
    Random random = new Random();

    // Hộp thoại của Add
    AddDialog addDialog = new AddDialog();
    // Hộp thoại của Delete
    DeleteDialog deleteDialog = new DeleteDialog();
    // Hộp thoại của Edit
    EditWordDialog editWordDialog = new EditWordDialog();
    // Hộp thoại Test
    TestDialog testDialog = new TestDialog();
    // Hộp thoại Review
    ReviewDialog reviewDialog = new ReviewDialog();

    /**
     * Creates new form DictionaryGUI
     */
    public DictionaryGUI() {
        initComponents();
        setIcon();
        setBackground();
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setVisible(false);
                HomeScreen homeScreen = new HomeScreen();
                homeScreen.setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbFind = new javax.swing.JButton();
        jfFind = new javax.swing.JTextField();
        jbAdd = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jaTranslation = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jaDictionary = new javax.swing.JTextArea();
        jlName = new javax.swing.JLabel();
        jbBack = new javax.swing.JButton();
        jlDate = new javax.swing.JLabel();
        jlVersion = new javax.swing.JLabel();
        jlAuthor = new javax.swing.JLabel();
        jbRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbTest = new javax.swing.JButton();
        jbReview = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuOpenFile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuExit = new javax.swing.JMenuItem();

        setTitle("English Dictionary");
        setResizable(false);

        jbFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconFind.png"))); // NOI18N
        jbFind.setText("Find");
        jbFind.setToolTipText("Find a word");
        jbFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFindActionPerformed(evt);
            }
        });

        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconAdd.png"))); // NOI18N
        jbAdd.setText("Add");
        jbAdd.setToolTipText("Add a new word");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });

        jbDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconDelete.png"))); // NOI18N
        jbDelete.setText("Delete");
        jbDelete.setToolTipText("Delete a word");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jbEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconEdit.png"))); // NOI18N
        jbEdit.setText("Edit");
        jbEdit.setToolTipText("Edit a word");
        jbEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditActionPerformed(evt);
            }
        });

        jaTranslation.setEditable(false);
        jaTranslation.setColumns(20);
        jaTranslation.setLineWrap(true);
        jaTranslation.setRows(5);
        jaTranslation.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jaTranslation);

        jaDictionary.setEditable(false);
        jaDictionary.setColumns(20);
        jaDictionary.setLineWrap(true);
        jaDictionary.setRows(5);
        jaDictionary.setWrapStyleWord(true);
        jaDictionary.setDragEnabled(true);
        jScrollPane3.setViewportView(jaDictionary);

        jlName.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jlName.setForeground(new java.awt.Color(51, 51, 255));
        jlName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconLabel.png"))); // NOI18N
        jlName.setText("ENGLISH DICTIONARY");

        jbBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconExit.png"))); // NOI18N
        jbBack.setText("Back");
        jbBack.setToolTipText("Back to homescreen");
        jbBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBackActionPerformed(evt);
            }
        });

        jlDate.setText("Date");
        jlDate.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jlDateAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jlVersion.setText("Version: Demo");

        jlAuthor.setText("Author: Nguyen Van Phuc & Nguyen Duc Thang");

        jbRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconRefresh.png"))); // NOI18N
        jbRefresh.setText("Refresh");
        jbRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("List:");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Meaning:");

        jbTest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconTest.png"))); // NOI18N
        jbTest.setText("Test");
        jbTest.setToolTipText("Do a test");
        jbTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTestActionPerformed(evt);
            }
        });

        jbReview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DictionaryGUI/AppIcons/IconReview.png"))); // NOI18N
        jbReview.setText("Review");
        jbReview.setToolTipText("Review some word");
        jbReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReviewActionPerformed(evt);
            }
        });

        jMenuFile.setText("File");

        jMenuOpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpenFile.setText("Open File");
        jMenuFile.add(jMenuOpenFile);
        jMenuFile.add(jSeparator1);

        jMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuExit);

        jMenuBar2.add(jMenuFile);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jfFind)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbAdd)
                                    .addComponent(jbDelete)
                                    .addComponent(jbRefresh)
                                    .addComponent(jbEdit)
                                    .addComponent(jbTest)
                                    .addComponent(jbBack)
                                    .addComponent(jbFind)
                                    .addComponent(jbReview))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jlName, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(289, 289, 289)
                                        .addComponent(jlAuthor))
                                    .addComponent(jlVersion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlDate)
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAdd, jbBack, jbDelete, jbEdit, jbFind, jbRefresh, jbReview, jbTest});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane3, jfFind});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jfFind)
                                    .addComponent(jbFind)
                                    .addComponent(jlName)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbRefresh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbTest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbReview)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBack)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlDate)
                    .addComponent(jlAuthor)
                    .addComponent(jlVersion))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbAdd, jbBack, jbDelete, jbEdit, jbFind, jbRefresh, jbReview, jbTest, jfFind});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlAuthor, jlDate, jlVersion});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane3});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Tạo sự kiện cho jbDelete
     *
     * @param evt Sự kiện
     */
    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        deleteDialog.setVisible(true);
    }//GEN-LAST:event_jbDeleteActionPerformed

    /**
     * Tạo sự kiện cho jbFind
     *
     * @param evt Sự kiện
     */
    private void jbFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFindActionPerformed
        String find = jfFind.getText();
        if (find.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập từ cần tìm.", "Error", JOptionPane.ERROR_MESSAGE);
            jfFind.requestFocus();
            return;
        }
        jfFind.setText("");
        jfFind.requestFocus();
        if (true) {
            JOptionPane.showMessageDialog(null, "Không có từ cần tìm.", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            //Hiển thị từ
        }
    }//GEN-LAST:event_jbFindActionPerformed

    /**
     * Tạo sự kiện cho jbBack
     *
     * @param evt Sự kiện
     */
    private void jbBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBackActionPerformed
        this.setVisible(false);
        HomeScreen homeScreen = new HomeScreen();
        homeScreen.setVisible(true);
    }//GEN-LAST:event_jbBackActionPerformed

    /**
     * Tạo sự kiện cho jbAdd
     *
     * @param evt Sự kiện
     */
    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        addDialog.setVisible(true);
    }//GEN-LAST:event_jbAddActionPerformed

    /**
     * Tạo sự kiện cho jbEdit
     *
     * @param evt sự kiện
     */
    private void jbEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditActionPerformed
        editWordDialog.setVisible(true);
    }//GEN-LAST:event_jbEditActionPerformed

    /**
     * Tạo nội dung cho jlDate
     *
     * @param evt Nội dung
     */
    private void jlDateAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jlDateAncestorAdded
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy zzz");
        Date date = new Date();
        String strDate = dateFormat.format(date);
        jlDate.setText(strDate);
    }//GEN-LAST:event_jlDateAncestorAdded

    /**
     * Tạo sự kiện cho jbRefresh
     *
     * @param evt Sự kiện
     */
    private void jbRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefreshActionPerformed
        JOptionPane.showMessageDialog(null, "Done!", "Information", JOptionPane.INFORMATION_MESSAGE, iconTrue);
    }//GEN-LAST:event_jbRefreshActionPerformed

    /**
     * Tạo sự kiện cho jbTest
     *
     * @param evt Sự kiện
     */
    private void jbTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTestActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Thực hiện bài kiểm tra?", "Question", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (click == JOptionPane.YES_OPTION) {
            int n = random.nextInt(50);
            testDialog.setjRadioButton1(String.valueOf(n));
            testDialog.setVisible(true);
        }
    }//GEN-LAST:event_jbTestActionPerformed

    /**
     * Tạo sự kiện cho jMenuExit
     *
     * @param evt Sự kiện
     */
    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuExitActionPerformed

    /**
     * Tạo sự kiện cho jbReview
     *
     * @param evt Sự kiện
     */
    private void jbReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReviewActionPerformed
        reviewDialog.setVisible(true);
    }//GEN-LAST:event_jbReviewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictionaryGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuOpenFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jaDictionary;
    private javax.swing.JTextArea jaTranslation;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbBack;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbEdit;
    private javax.swing.JButton jbFind;
    private javax.swing.JButton jbRefresh;
    private javax.swing.JButton jbReview;
    private javax.swing.JButton jbTest;
    private javax.swing.JTextField jfFind;
    private javax.swing.JLabel jlAuthor;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlVersion;
    // End of variables declaration//GEN-END:variables

    /**
     * Cài đặt Icon
     */
    private void setIcon() {
        ImageIcon icon = new ImageIcon("src/TitleIcons/IconDictionary.png");
        setIconImage(icon.getImage());
    }

    /**
     * Cài đặt background
     */
    private void setBackground() {
        getContentPane().setBackground(new Color(153, 255, 153));
    }
}
